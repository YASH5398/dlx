import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import React, { useEffect, useMemo, useState } from 'react';
import { useWallet } from '../../hooks/useWallet';
import { firestore } from '../../firebase';
import { doc, collection, onSnapshot, addDoc, query, orderBy } from 'firebase/firestore';
import { useUser } from '../../context/UserContext';
import { useNotifications } from '../../context/NotificationContext';
export default function Wallet() {
    const { wallet } = useWallet();
    const { user } = useUser();
    const { addNotification } = useNotifications();
    const uid = user?.id;
    const [activeFlow, setActiveFlow] = useState(null);
    const [depositStep, setDepositStep] = useState(1);
    const [withdrawStep, setWithdrawStep] = useState(1);
    const [swapStep, setSwapStep] = useState(1);
    const [depositMethod, setDepositMethod] = useState(null);
    const [withdrawMethod, setWithdrawMethod] = useState(null);
    const [blockchain, setBlockchain] = useState(null);
    const [depositAmount, setDepositAmount] = useState('');
    const [withdrawAmount, setWithdrawAmount] = useState('');
    const [swapAmount, setSwapAmount] = useState('');
    const [upi, setUpi] = useState('');
    const [walletAddress, setWalletAddress] = useState('');
    const [txHash, setTxHash] = useState('');
    const [txHashFile, setTxHashFile] = useState(null);
    const [isProcessing, setIsProcessing] = useState(false);
    const [isTransitioning, setIsTransitioning] = useState(false);
    const [transactions, setTransactions] = useState([]);
    const [copySuccess, setCopySuccess] = useState(false);
    // Firestore-streamed wallet breakdown
    const [mainUsdt, setMainUsdt] = useState(0);
    const [mainInr, setMainInr] = useState(0);
    const [purchaseUsdt, setPurchaseUsdt] = useState(0);
    const [purchaseInr, setPurchaseInr] = useState(0);
    const dlxUsdRate = 0.1;
    const dlxUsdValue = useMemo(() => (wallet?.dlx ?? 0) * dlxUsdRate, [wallet?.dlx]);
    const swapUsdtValue = useMemo(() => (parseFloat(swapAmount) || 0) * dlxUsdRate, [swapAmount]);
    const depositAddress = {
        bep20: '0x85fdfd1a83c4bc9a8c11f3b1308ead5d397d41d3',
        trc20: 'TH1s69X1MqxJJme6BVPU3XFXhk8QwSXa7M'
    };
    // Stream wallet from Firestore users doc
    useEffect(() => {
        if (!uid)
            return;
        const udoc = doc(firestore, 'users', uid);
        const unsub = onSnapshot(udoc, (snap) => {
            const d = snap.data() || {};
            const w = d.wallet || {};
            setMainUsdt(Number(w.main || 0));
            setPurchaseUsdt(Number(w.purchase || 0));
        });
        return () => { try {
            unsub();
        }
        catch { } };
    }, [uid]);
    // Stream recent transactions from Firestore
    useEffect(() => {
        if (!uid)
            return;
        const txQ = query(collection(firestore, 'wallets', uid, 'transactions'), orderBy('createdAt', 'desc'));
        const unsub = onSnapshot(txQ, (snap) => {
            const rows = [];
            snap.forEach((docSnap) => {
                const t = docSnap.data();
                const ts = t.createdAt?.toMillis ? t.createdAt.toMillis() : Number(t.createdAt || 0);
                rows.push({
                    id: docSnap.id,
                    date: ts ? new Date(ts).toLocaleString() : '',
                    type: t.type,
                    amount: (typeof t.amount === 'number' ? t.amount : parseFloat(String(t.amount || '0'))).toFixed(2),
                    currency: t.currency ?? 'USDT',
                    status: t.status ?? 'pending',
                    description: t.description ?? '',
                    createdAt: ts || 0,
                });
            });
            rows.sort((a, b) => (b.createdAt ?? 0) - (a.createdAt ?? 0));
            setTransactions(rows);
        });
        return () => { try {
            unsub();
        }
        catch { } };
    }, [uid]);
    const handleFlowChange = (flow) => {
        setIsTransitioning(true);
        setTimeout(() => {
            setActiveFlow(flow);
            setDepositStep(1);
            setWithdrawStep(1);
            setSwapStep(1);
            setDepositMethod(null);
            setWithdrawMethod(null);
            setBlockchain(null);
            setDepositAmount('');
            setWithdrawAmount('');
            setSwapAmount('');
            setUpi('');
            setWalletAddress('');
            setTxHash('');
            setTxHashFile(null);
            setIsTransitioning(false);
        }, 500);
    };
    const copyToClipboard = (text) => {
        navigator.clipboard.writeText(text).then(() => {
            setCopySuccess(true);
            setTimeout(() => setCopySuccess(false), 2000);
        });
    };
    const handleDeposit = async () => {
        const amt = parseFloat(depositAmount);
        if (!uid || !amt || amt <= 0)
            return;
        setIsProcessing(true);
        const now = Date.now();
        const currency = depositMethod === 'inr' ? 'INR' : 'USDT';
        const description = depositMethod === 'inr'
            ? 'Deposit via UPI'
            : `Deposit via ${blockchain?.toUpperCase()}`;
        try {
            const txCol = collection(firestore, 'wallets', uid, 'transactions');
            await addDoc(txCol, {
                type: 'deposit',
                amount: amt,
                currency,
                status: 'pending',
                description: `${description} (Admin Verification Pending)`,
                createdAt: now,
            });
            try {
                await addNotification({
                    type: 'transaction',
                    message: `Deposit submitted: ${amt} ${currency} (Awaiting verification)`
                }, true);
            }
            catch { }
            handleFlowChange(null);
        }
        catch (e) {
            try {
                await addNotification({
                    type: 'error',
                    message: e?.message || 'Deposit submission failed.'
                }, false);
            }
            catch { }
        }
        finally {
            setIsProcessing(false);
        }
    };
    const handleWithdraw = async () => {
        const amt = parseFloat(withdrawAmount);
        if (!uid || !amt || amt <= 0)
            return;
        setIsProcessing(true);
        const now = Date.now();
        const currency = withdrawMethod === 'inr' ? 'INR' : 'USDT';
        const description = withdrawMethod === 'inr'
            ? 'Withdrawal to UPI'
            : `Withdrawal to ${blockchain?.toUpperCase()}`;
        try {
            const txCol = collection(firestore, 'wallets', uid, 'transactions');
            await addDoc(txCol, {
                type: 'withdraw',
                amount: amt,
                currency,
                status: 'pending',
                description: `${description} (Admin Verification Pending)`,
                createdAt: now,
            });
            try {
                await addNotification({
                    type: 'transaction',
                    message: `Withdrawal requested: ${amt} ${currency} (Awaiting verification)`
                }, true);
            }
            catch { }
            handleFlowChange(null);
        }
        catch (e) {
            try {
                await addNotification({
                    type: 'error',
                    message: e?.message || 'Withdrawal request failed.'
                }, false);
            }
            catch { }
        }
        finally {
            setIsProcessing(false);
        }
    };
    const handleSwap = async () => {
        const dlxAmount = parseFloat(swapAmount);
        if (!uid || !dlxAmount || dlxAmount < 50 || dlxAmount > wallet.dlx)
            return;
        setIsProcessing(true);
        const now = Date.now();
        const usdtAmount = dlxAmount * dlxUsdRate;
        try {
            const txCol = collection(firestore, 'wallets', uid, 'transactions');
            await addDoc(txCol, {
                type: 'swap',
                amount: Number(usdtAmount.toFixed(2)),
                currency: 'USDT',
                status: 'pending',
                description: `Swapped ${dlxAmount.toFixed(2)} DLX to ${usdtAmount.toFixed(2)} USDT (Admin Verification Pending)`,
                createdAt: now,
            });
            try {
                await addNotification({
                    type: 'transaction',
                    message: `Swap submitted: ${dlxAmount.toFixed(2)} DLX to ${usdtAmount.toFixed(2)} USDT (Awaiting verification)`
                }, true);
            }
            catch { }
            handleFlowChange(null);
        }
        catch (e) {
            try {
                await addNotification({
                    type: 'error',
                    message: e?.message || 'Swap failed.'
                }, false);
            }
            catch { }
        }
        finally {
            setIsProcessing(false);
        }
    };
    const getStatusColor = (status) => {
        switch (status) {
            case 'completed': return 'bg-emerald-500/20 text-emerald-400 border-emerald-500/30';
            case 'pending': return 'bg-amber-500/20 text-amber-400 border-amber-500/30';
            case 'failed': return 'bg-rose-500/20 text-rose-400 border-rose-500/30';
            default: return 'bg-slate-500/20 text-slate-400 border-slate-500/30';
        }
    };
    const getTypeIcon = (type) => {
        switch (type) {
            case 'deposit':
                return (_jsx("div", { className: "w-10 h-10 rounded-full bg-emerald-500/20 flex items-center justify-center", children: _jsx("svg", { className: "w-5 h-5 text-emerald-400", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M12 4v16m0 0l-4-4m4 4l4-4" }) }) }));
            case 'withdraw':
                return (_jsx("div", { className: "w-10 h-10 rounded-full bg-rose-500/20 flex items-center justify-center", children: _jsx("svg", { className: "w-5 h-5 text-rose-400", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M12 20V4m0 0l4 4m-4-4l-4 4" }) }) }));
            case 'swap':
                return (_jsx("div", { className: "w-10 h-10 rounded-full bg-violet-500/20 flex items-center justify-center", children: _jsx("svg", { className: "w-5 h-5 text-violet-400", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4" }) }) }));
            default:
                return null;
        }
    };
    const ProgressBar = ({ currentStep, totalSteps }) => (_jsxs("div", { className: "w-full mb-8", children: [_jsxs("div", { className: "flex items-center justify-between mb-2", children: [_jsxs("span", { className: "text-sm font-medium text-slate-400", children: ["Step ", currentStep, " of ", totalSteps] }), _jsxs("span", { className: "text-sm font-medium text-slate-400", children: [Math.round((currentStep / totalSteps) * 100), "%"] })] }), _jsx("div", { className: "flex gap-2", children: Array.from({ length: totalSteps }).map((_, idx) => (_jsx("div", { className: `h-2 flex-1 rounded-full transition-all duration-500 ${idx < currentStep
                        ? 'bg-gradient-to-r from-violet-500 to-fuchsia-500'
                        : 'bg-slate-700'}` }, idx))) })] }));
    const renderMainPage = () => (_jsx("div", { className: `min-h-screen bg-gradient-to-br from-slate-950 via-slate-900 to-slate-950 text-white transition-opacity duration-500 ${isTransitioning ? 'opacity-0' : 'opacity-100'}`, children: _jsxs("div", { className: "container mx-auto px-4 py-8 max-w-lg", children: [_jsxs("div", { className: "mb-8 text-center", children: [_jsx("h1", { className: "text-4xl font-bold mb-2 bg-gradient-to-r from-violet-400 via-fuchsia-400 to-pink-400 bg-clip-text text-transparent", children: "My Wallet" }), _jsx("p", { className: "text-slate-400", children: "Manage your digital assets securely" })] }), _jsxs("div", { className: "space-y-4 mb-8", children: [_jsxs("div", { className: "relative overflow-hidden rounded-2xl bg-gradient-to-br from-violet-500/10 via-fuchsia-500/10 to-pink-500/10 border border-violet-500/20 backdrop-blur-xl p-6 shadow-2xl", children: [_jsx("div", { className: "absolute top-0 right-0 w-40 h-40 bg-violet-500/20 rounded-full blur-3xl -z-10" }), _jsxs("div", { className: "flex items-center justify-between mb-4", children: [_jsx("h3", { className: "text-xl font-bold text-white", children: "Main Wallet" }), _jsx("div", { className: "w-12 h-12 rounded-xl bg-gradient-to-br from-violet-500 to-fuchsia-500 flex items-center justify-center shadow-lg", children: _jsx("svg", { className: "w-6 h-6 text-white", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z" }) }) })] }), _jsx("div", { className: "space-y-2", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-slate-300", children: "USDT" }), _jsx("span", { className: "text-2xl font-bold text-white", children: mainUsdt.toFixed(2) })] }) })] }), _jsxs("div", { className: "relative overflow-hidden rounded-2xl bg-gradient-to-br from-cyan-500/10 via-blue-500/10 to-indigo-500/10 border border-cyan-500/20 backdrop-blur-xl p-6 shadow-2xl", children: [_jsx("div", { className: "absolute bottom-0 left-0 w-40 h-40 bg-cyan-500/20 rounded-full blur-3xl -z-10" }), _jsxs("div", { className: "flex items-center justify-between mb-4", children: [_jsx("h3", { className: "text-xl font-bold text-white", children: "Purchase Wallet" }), _jsx("div", { className: "w-12 h-12 rounded-xl bg-gradient-to-br from-cyan-500 to-blue-500 flex items-center justify-center shadow-lg", children: _jsx("svg", { className: "w-6 h-6 text-white", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4" }) }) })] }), _jsx("div", { className: "space-y-2", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-slate-300", children: "USDT" }), _jsx("span", { className: "text-2xl font-bold text-white", children: purchaseUsdt.toFixed(2) })] }) })] })] }), _jsxs("div", { className: "grid grid-cols-3 gap-4 mb-8", children: [_jsxs("button", { onClick: () => handleFlowChange('deposit'), className: "group relative overflow-hidden rounded-xl bg-gradient-to-br from-emerald-500 to-teal-500 p-4 shadow-lg hover:shadow-emerald-500/50 transition-all duration-300 hover:scale-105", children: [_jsx("div", { className: "absolute inset-0 bg-white/20 translate-y-full group-hover:translate-y-0 transition-transform duration-300" }), _jsx("svg", { className: "w-8 h-8 text-white mx-auto mb-2 relative z-10", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M12 4v16m0 0l-4-4m4 4l4-4" }) }), _jsx("span", { className: "text-white font-semibold text-sm relative z-10", children: "Deposit" })] }), _jsxs("button", { onClick: () => handleFlowChange('withdraw'), className: "group relative overflow-hidden rounded-xl bg-gradient-to-br from-rose-500 to-pink-500 p-4 shadow-lg hover:shadow-rose-500/50 transition-all duration-300 hover:scale-105", children: [_jsx("div", { className: "absolute inset-0 bg-white/20 translate-y-full group-hover:translate-y-0 transition-transform duration-300" }), _jsx("svg", { className: "w-8 h-8 text-white mx-auto mb-2 relative z-10", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M12 20V4m0 0l4 4m-4-4l-4 4" }) }), _jsx("span", { className: "text-white font-semibold text-sm relative z-10", children: "Withdraw" })] }), _jsxs("button", { onClick: () => handleFlowChange('swap'), className: "group relative overflow-hidden rounded-xl bg-gradient-to-br from-violet-500 to-fuchsia-500 p-4 shadow-lg hover:shadow-violet-500/50 transition-all duration-300 hover:scale-105", children: [_jsx("div", { className: "absolute inset-0 bg-white/20 translate-y-full group-hover:translate-y-0 transition-transform duration-300" }), _jsx("svg", { className: "w-8 h-8 text-white mx-auto mb-2 relative z-10", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M8 7h12m0 0l-4-4m4 4l-4 4m0 6H4m0 0l4 4m-4-4l4-4" }) }), _jsx("span", { className: "text-white font-semibold text-sm relative z-10", children: "Swap" })] })] }), _jsxs("div", { className: "rounded-2xl bg-slate-800/50 border border-slate-700/50 backdrop-blur-xl p-6 shadow-2xl", children: [_jsxs("h3", { className: "text-xl font-bold text-white mb-4 flex items-center gap-2", children: [_jsx("svg", { className: "w-6 h-6 text-violet-400", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" }) }), "Recent Transactions"] }), _jsx("div", { className: "space-y-3", children: transactions.length === 0 ? (_jsxs("div", { className: "text-center py-8", children: [_jsx("svg", { className: "w-16 h-16 text-slate-600 mx-auto mb-3", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4" }) }), _jsx("p", { className: "text-slate-400", children: "No transactions yet" })] })) : (transactions.slice(0, 5).map((tx) => (_jsxs("div", { className: "flex items-center gap-4 p-4 rounded-xl bg-slate-700/30 hover:bg-slate-700/50 border border-slate-600/30 transition-all duration-200", children: [getTypeIcon(tx.type), _jsxs("div", { className: "flex-1 min-w-0", children: [_jsxs("div", { className: "flex items-start justify-between gap-2 mb-1", children: [_jsx("p", { className: "text-white font-medium text-sm truncate", children: tx.description }), _jsxs("p", { className: `text-sm font-bold whitespace-nowrap ${tx.type === 'withdraw' ? 'text-rose-400' : 'text-emerald-400'}`, children: [tx.type === 'withdraw' ? '-' : '+', tx.amount, " ", tx.currency] })] }), _jsxs("div", { className: "flex items-center justify-between gap-2", children: [_jsx("span", { className: "text-xs text-slate-400", children: tx.date }), _jsx("span", { className: `px-2 py-1 rounded-full text-xs font-medium border ${getStatusColor(tx.status)}`, children: tx.status.toUpperCase() })] })] })] }, tx.id)))) })] })] }) }));
    const renderDepositFlow = () => {
        const getTotalSteps = () => {
            if (depositMethod === 'inr')
                return 3;
            if (depositMethod === 'usdt')
                return 5;
            return 5;
        };
        return (_jsx("div", { className: `min-h-screen bg-gradient-to-br from-slate-950 via-slate-900 to-slate-950 text-white transition-opacity duration-500 ${isTransitioning ? 'opacity-0' : 'opacity-100'}`, children: _jsxs("div", { className: "container mx-auto px-4 py-8 max-w-lg min-h-screen flex flex-col", children: [_jsxs("div", { className: "mb-6", children: [_jsxs("button", { onClick: () => depositStep === 1 ? handleFlowChange(null) : setDepositStep(depositStep - 1), className: "flex items-center gap-2 text-slate-400 hover:text-white transition-colors mb-4", children: [_jsx("svg", { className: "w-5 h-5", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M15 19l-7-7 7-7" }) }), _jsx("span", { children: "Back" })] }), _jsx("h2", { className: "text-3xl font-bold bg-gradient-to-r from-emerald-400 to-teal-400 bg-clip-text text-transparent", children: "Deposit Funds" })] }), _jsx(ProgressBar, { currentStep: depositStep, totalSteps: getTotalSteps() }), _jsxs("div", { className: "flex-1 flex flex-col", children: [depositStep === 1 && (_jsxs("div", { className: "space-y-6 animate-fadeIn", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-xl font-semibold text-white mb-2", children: "Select Deposit Method" }), _jsx("p", { className: "text-slate-400 text-sm", children: "Choose how you want to deposit funds" })] }), _jsxs("div", { className: "grid grid-cols-2 gap-4", children: [_jsxs("button", { onClick: () => {
                                                    setDepositMethod('usdt');
                                                    setDepositStep(2);
                                                }, className: "group relative overflow-hidden rounded-2xl bg-gradient-to-br from-amber-500/20 to-yellow-500/20 border-2 border-amber-500/30 hover:border-amber-500 p-8 transition-all duration-300 hover:scale-105", children: [_jsx("div", { className: "absolute inset-0 bg-gradient-to-br from-amber-500/0 to-yellow-500/0 group-hover:from-amber-500/10 group-hover:to-yellow-500/10 transition-all duration-300" }), _jsx("div", { className: "text-6xl mb-4", children: "\uD83D\uDCB5" }), _jsx("p", { className: "text-white font-bold text-lg", children: "USDT" }), _jsx("p", { className: "text-slate-400 text-xs mt-1", children: "Cryptocurrency" })] }), _jsxs("button", { onClick: () => {
                                                    setDepositMethod('inr');
                                                    setDepositStep(2);
                                                }, className: "group relative overflow-hidden rounded-2xl bg-gradient-to-br from-blue-500/20 to-indigo-500/20 border-2 border-blue-500/30 hover:border-blue-500 p-8 transition-all duration-300 hover:scale-105", children: [_jsx("div", { className: "absolute inset-0 bg-gradient-to-br from-blue-500/0 to-indigo-500/0 group-hover:from-blue-500/10 group-hover:to-indigo-500/10 transition-all duration-300" }), _jsx("div", { className: "text-6xl mb-4", children: "\uD83C\uDDEE\uD83C\uDDF3" }), _jsx("p", { className: "text-white font-bold text-lg", children: "INR" }), _jsx("p", { className: "text-slate-400 text-xs mt-1", children: "Indian Rupee" })] })] })] })), depositStep === 2 && depositMethod === 'usdt' && (_jsxs("div", { className: "space-y-6 animate-fadeIn", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-xl font-semibold text-white mb-2", children: "Select Blockchain Network" }), _jsx("p", { className: "text-slate-400 text-sm", children: "Choose the network for your deposit" })] }), _jsxs("div", { className: "space-y-4", children: [_jsxs("button", { onClick: () => {
                                                    setBlockchain('bep20');
                                                    setDepositStep(3);
                                                }, className: "group w-full relative overflow-hidden rounded-2xl bg-gradient-to-r from-yellow-500/20 to-amber-500/20 border-2 border-yellow-500/30 hover:border-yellow-500 p-6 transition-all duration-300 hover:scale-102 text-left", children: [_jsx("div", { className: "absolute inset-0 bg-gradient-to-r from-yellow-500/0 to-amber-500/0 group-hover:from-yellow-500/10 group-hover:to-amber-500/10 transition-all duration-300" }), _jsxs("div", { className: "flex items-center gap-4", children: [_jsx("div", { className: "w-12 h-12 rounded-xl bg-gradient-to-br from-yellow-500 to-amber-500 flex items-center justify-center flex-shrink-0", children: _jsx("span", { className: "text-2xl", children: "\uD83D\uDD17" }) }), _jsxs("div", { children: [_jsx("p", { className: "text-white font-bold text-lg", children: "Binance Smart Chain" }), _jsx("p", { className: "text-slate-400 text-sm", children: "BEP20 Network" })] })] })] }), _jsxs("button", { onClick: () => {
                                                    setBlockchain('trc20');
                                                    setDepositStep(3);
                                                }, className: "group w-full relative overflow-hidden rounded-2xl bg-gradient-to-r from-red-500/20 to-rose-500/20 border-2 border-red-500/30 hover:border-red-500 p-6 transition-all duration-300 hover:scale-102 text-left", children: [_jsx("div", { className: "absolute inset-0 bg-gradient-to-r from-red-500/0 to-rose-500/0 group-hover:from-red-500/10 group-hover:to-rose-500/10 transition-all duration-300" }), _jsxs("div", { className: "flex items-center gap-4", children: [_jsx("div", { className: "w-12 h-12 rounded-xl bg-gradient-to-br from-red-500 to-rose-500 flex items-center justify-center flex-shrink-0", children: _jsx("span", { className: "text-2xl", children: "\u26A1" }) }), _jsxs("div", { children: [_jsx("p", { className: "text-white font-bold text-lg", children: "TRON Network" }), _jsx("p", { className: "text-slate-400 text-sm", children: "TRC20 Network" })] })] })] })] })] })), depositStep === 2 && depositMethod === 'inr' && (_jsxs("div", { className: "space-y-6 animate-fadeIn", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-xl font-semibold text-white mb-2", children: "Enter Deposit Amount" }), _jsx("p", { className: "text-slate-400 text-sm", children: "How much would you like to deposit?" })] }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-slate-300 mb-2", children: "Amount in INR" }), _jsxs("div", { className: "relative", children: [_jsx("span", { className: "absolute left-4 top-1/2 -translate-y-1/2 text-slate-400 text-lg", children: "\u20B9" }), _jsx("input", { type: "number", placeholder: "0.00", value: depositAmount, onChange: (e) => setDepositAmount(e.target.value), className: "w-full pl-10 pr-16 py-4 rounded-xl bg-slate-800 border-2 border-slate-700 focus:border-emerald-500 text-white text-lg font-semibold focus:outline-none transition-all" }), _jsx("span", { className: "absolute right-4 top-1/2 -translate-y-1/2 text-slate-400 font-medium", children: "INR" })] })] }), _jsx("div", { className: "flex flex-wrap gap-2", children: [500, 1000, 5000, 10000].map((amount) => (_jsxs("button", { onClick: () => setDepositAmount(amount.toString()), className: "px-4 py-2 rounded-lg bg-slate-700 hover:bg-slate-600 text-white text-sm font-medium transition-all", children: ["\u20B9", amount] }, amount))) })] }), _jsx("button", { onClick: () => setDepositStep(3), disabled: !depositAmount || parseFloat(depositAmount) <= 0, className: "w-full py-4 rounded-xl bg-gradient-to-r from-emerald-500 to-teal-500 text-white font-bold text-lg shadow-lg hover:shadow-emerald-500/50 transition-all disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:shadow-none", children: "Continue" })] })), depositStep === 3 && depositMethod === 'usdt' && (_jsxs("div", { className: "space-y-6 animate-fadeIn", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-xl font-semibold text-white mb-2", children: "Enter Deposit Amount" }), _jsx("p", { className: "text-slate-400 text-sm", children: "How much USDT would you like to deposit?" })] }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-slate-300 mb-2", children: "Amount in USDT" }), _jsxs("div", { className: "relative", children: [_jsx("span", { className: "absolute left-4 top-1/2 -translate-y-1/2 text-slate-400 text-lg", children: "$" }), _jsx("input", { type: "number", placeholder: "0.00", value: depositAmount, onChange: (e) => setDepositAmount(e.target.value), className: "w-full pl-10 pr-20 py-4 rounded-xl bg-slate-800 border-2 border-slate-700 focus:border-emerald-500 text-white text-lg font-semibold focus:outline-none transition-all" }), _jsx("span", { className: "absolute right-4 top-1/2 -translate-y-1/2 text-slate-400 font-medium", children: "USDT" })] })] }), _jsx("div", { className: "flex flex-wrap gap-2", children: [10, 50, 100, 500].map((amount) => (_jsxs("button", { onClick: () => setDepositAmount(amount.toString()), className: "px-4 py-2 rounded-lg bg-slate-700 hover:bg-slate-600 text-white text-sm font-medium transition-all", children: ["$", amount] }, amount))) })] }), _jsx("button", { onClick: () => setDepositStep(4), disabled: !depositAmount || parseFloat(depositAmount) <= 0, className: "w-full py-4 rounded-xl bg-gradient-to-r from-emerald-500 to-teal-500 text-white font-bold text-lg shadow-lg hover:shadow-emerald-500/50 transition-all disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:shadow-none", children: "Continue" })] })), depositStep === 3 && depositMethod === 'inr' && (_jsxs("div", { className: "space-y-6 animate-fadeIn", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-xl font-semibold text-white mb-2", children: "Confirm Deposit Details" }), _jsx("p", { className: "text-slate-400 text-sm", children: "Review and submit your deposit request" })] }), _jsxs("div", { className: "rounded-2xl bg-gradient-to-br from-blue-500/10 to-indigo-500/10 border border-blue-500/30 p-6 space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between pb-3 border-b border-slate-700", children: [_jsx("span", { className: "text-slate-400", children: "Deposit Amount" }), _jsxs("span", { className: "text-white font-bold text-xl", children: ["\u20B9", depositAmount] })] }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex items-center gap-2 text-emerald-400 text-sm", children: [_jsx("svg", { className: "w-5 h-5", fill: "currentColor", viewBox: "0 0 20 20", children: _jsx("path", { fillRule: "evenodd", d: "M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z", clipRule: "evenodd" }) }), _jsx("span", { children: "UPI Payment: digilinex@axl" })] }), _jsxs("div", { className: "flex items-center gap-2 text-amber-400 text-sm", children: [_jsx("svg", { className: "w-5 h-5", fill: "currentColor", viewBox: "0 0 20 20", children: _jsx("path", { fillRule: "evenodd", d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z", clipRule: "evenodd" }) }), _jsx("span", { children: "Admin verification required (24-48 hours)" })] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-slate-300 mb-2", children: "Your UPI ID *" }), _jsx("input", { type: "text", placeholder: "yourname@upi", value: upi, onChange: (e) => setUpi(e.target.value), className: "w-full px-4 py-3 rounded-xl bg-slate-800 border-2 border-slate-700 focus:border-blue-500 text-white focus:outline-none transition-all" }), _jsx("p", { className: "text-xs text-slate-400 mt-1", children: "Enter the UPI ID you'll use for payment" })] })] }), _jsx("button", { onClick: handleDeposit, disabled: isProcessing || !upi, className: "w-full py-4 rounded-xl bg-gradient-to-r from-emerald-500 to-teal-500 text-white font-bold text-lg shadow-lg hover:shadow-emerald-500/50 transition-all disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:shadow-none flex items-center justify-center gap-2", children: isProcessing ? (_jsxs(_Fragment, { children: [_jsxs("svg", { className: "animate-spin h-5 w-5", viewBox: "0 0 24 24", children: [_jsx("circle", { className: "opacity-25", cx: "12", cy: "12", r: "10", stroke: "currentColor", strokeWidth: "4", fill: "none" }), _jsx("path", { className: "opacity-75", fill: "currentColor", d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z" })] }), "Processing..."] })) : ('Submit Deposit Request') })] })), depositStep === 4 && depositMethod === 'usdt' && blockchain && (_jsxs("div", { className: "space-y-6 animate-fadeIn", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-xl font-semibold text-white mb-2", children: "Deposit Address" }), _jsxs("p", { className: "text-slate-400 text-sm", children: ["Send USDT to this address on ", blockchain.toUpperCase(), " network"] })] }), _jsxs("div", { className: "rounded-2xl bg-gradient-to-br from-amber-500/10 to-yellow-500/10 border border-amber-500/30 p-6 space-y-4", children: [_jsxs("div", { className: "flex items-center justify-between pb-3 border-b border-slate-700", children: [_jsx("span", { className: "text-slate-400", children: "Network" }), _jsx("span", { className: "text-white font-bold", children: blockchain.toUpperCase() })] }), _jsxs("div", { className: "flex items-center justify-between pb-3 border-b border-slate-700", children: [_jsx("span", { className: "text-slate-400", children: "Amount" }), _jsxs("span", { className: "text-white font-bold text-xl", children: [depositAmount, " USDT"] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-slate-300 mb-2", children: "Deposit Address" }), _jsxs("div", { className: "relative", children: [_jsx("input", { type: "text", value: depositAddress[blockchain], readOnly: true, className: "w-full pr-12 px-4 py-3 rounded-xl bg-slate-800 border-2 border-slate-700 text-white text-sm font-mono focus:outline-none" }), _jsx("button", { onClick: () => copyToClipboard(depositAddress[blockchain]), className: "absolute right-2 top-1/2 -translate-y-1/2 p-2 rounded-lg bg-slate-700 hover:bg-slate-600 transition-all", children: copySuccess ? (_jsx("svg", { className: "w-5 h-5 text-emerald-400", fill: "currentColor", viewBox: "0 0 20 20", children: _jsx("path", { fillRule: "evenodd", d: "M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z", clipRule: "evenodd" }) })) : (_jsx("svg", { className: "w-5 h-5 text-slate-400", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" }) })) })] })] }), _jsx("div", { className: "bg-amber-500/10 border border-amber-500/30 rounded-xl p-4", children: _jsxs("div", { className: "flex gap-3", children: [_jsx("svg", { className: "w-6 h-6 text-amber-400 flex-shrink-0", fill: "currentColor", viewBox: "0 0 20 20", children: _jsx("path", { fillRule: "evenodd", d: "M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z", clipRule: "evenodd" }) }), _jsxs("div", { className: "text-sm text-amber-200", children: [_jsx("p", { className: "font-semibold mb-1", children: "Important" }), _jsxs("ul", { className: "space-y-1 text-xs", children: [_jsxs("li", { children: ["\u2022 Only send USDT on ", blockchain.toUpperCase(), " network"] }), _jsx("li", { children: "\u2022 Sending other tokens may result in loss" }), _jsx("li", { children: "\u2022 Minimum deposit: 10 USDT" })] })] })] }) })] }), _jsx("button", { onClick: () => setDepositStep(5), className: "w-full py-4 rounded-xl bg-gradient-to-r from-emerald-500 to-teal-500 text-white font-bold text-lg shadow-lg hover:shadow-emerald-500/50 transition-all", children: "I've Sent the Payment" })] })), depositStep === 5 && depositMethod === 'usdt' && (_jsxs("div", { className: "space-y-6 animate-fadeIn", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-xl font-semibold text-white mb-2", children: "Confirm Payment" }), _jsx("p", { className: "text-slate-400 text-sm", children: "Enter your transaction details for verification" })] }), _jsxs("div", { className: "rounded-2xl bg-gradient-to-br from-emerald-500/10 to-teal-500/10 border border-emerald-500/30 p-6 space-y-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-slate-300 mb-2", children: "Transaction Hash *" }), _jsx("textarea", { placeholder: "Paste your transaction hash here (0x...)", value: txHash, onChange: (e) => setTxHash(e.target.value), rows: 3, className: "w-full px-4 py-3 rounded-xl bg-slate-800 border-2 border-slate-700 focus:border-emerald-500 text-white text-sm font-mono focus:outline-none transition-all resize-none" }), _jsx("p", { className: "text-xs text-slate-400 mt-1", children: "Find this in your wallet's transaction history" })] }), _jsx("div", { className: "bg-blue-500/10 border border-blue-500/30 rounded-xl p-4", children: _jsxs("div", { className: "flex gap-3", children: [_jsx("svg", { className: "w-6 h-6 text-blue-400 flex-shrink-0", fill: "currentColor", viewBox: "0 0 20 20", children: _jsx("path", { fillRule: "evenodd", d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z", clipRule: "evenodd" }) }), _jsxs("div", { className: "text-sm text-blue-200", children: [_jsx("p", { className: "font-semibold mb-1", children: "Verification Process" }), _jsx("p", { className: "text-xs", children: "Your deposit will be verified by our admin team within 24-48 hours. You'll receive a notification once approved." })] })] }) })] }), _jsx("button", { onClick: handleDeposit, disabled: isProcessing || !txHash, className: "w-full py-4 rounded-xl bg-gradient-to-r from-emerald-500 to-teal-500 text-white font-bold text-lg shadow-lg hover:shadow-emerald-500/50 transition-all disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:shadow-none flex items-center justify-center gap-2", children: isProcessing ? (_jsxs(_Fragment, { children: [_jsxs("svg", { className: "animate-spin h-5 w-5", viewBox: "0 0 24 24", children: [_jsx("circle", { className: "opacity-25", cx: "12", cy: "12", r: "10", stroke: "currentColor", strokeWidth: "4", fill: "none" }), _jsx("path", { className: "opacity-75", fill: "currentColor", d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z" })] }), "Submitting..."] })) : ('Submit Deposit Request') })] }))] })] }) }));
    };
    const renderWithdrawFlow = () => {
        const getTotalSteps = () => {
            if (withdrawMethod === 'inr')
                return 3;
            if (withdrawMethod === 'usdt')
                return 4;
            return 4;
        };
        return (_jsx("div", { className: `min-h-screen bg-gradient-to-br from-slate-950 via-slate-900 to-slate-950 text-white transition-opacity duration-500 ${isTransitioning ? 'opacity-0' : 'opacity-100'}`, children: _jsxs("div", { className: "container mx-auto px-4 py-8 max-w-lg min-h-screen flex flex-col", children: [_jsxs("div", { className: "mb-6", children: [_jsxs("button", { onClick: () => withdrawStep === 1 ? handleFlowChange(null) : setWithdrawStep(withdrawStep - 1), className: "flex items-center gap-2 text-slate-400 hover:text-white transition-colors mb-4", children: [_jsx("svg", { className: "w-5 h-5", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M15 19l-7-7 7-7" }) }), _jsx("span", { children: "Back" })] }), _jsx("h2", { className: "text-3xl font-bold bg-gradient-to-r from-rose-400 to-pink-400 bg-clip-text text-transparent", children: "Withdraw Funds" })] }), _jsx(ProgressBar, { currentStep: withdrawStep, totalSteps: getTotalSteps() }), _jsxs("div", { className: "flex-1 flex flex-col", children: [withdrawStep === 1 && (_jsxs("div", { className: "space-y-6 animate-fadeIn", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-xl font-semibold text-white mb-2", children: "Enter Withdrawal Amount" }), _jsx("p", { className: "text-slate-400 text-sm", children: "How much would you like to withdraw?" })] }), _jsxs("div", { className: "space-y-4", children: [_jsx("div", { className: "rounded-xl bg-slate-800/50 border border-slate-700 p-4", children: _jsxs("div", { className: "flex items-center justify-between text-sm mb-2", children: [_jsx("span", { className: "text-slate-400", children: "Available Balance" }), _jsxs("span", { className: "text-white font-bold", children: [mainUsdt.toFixed(2), " USDT"] })] }) }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-slate-300 mb-2", children: "Withdrawal Amount" }), _jsxs("div", { className: "relative", children: [_jsx("span", { className: "absolute left-4 top-1/2 -translate-y-1/2 text-slate-400 text-lg", children: "$" }), _jsx("input", { type: "number", placeholder: "0.00", value: withdrawAmount, onChange: (e) => setWithdrawAmount(e.target.value), className: "w-full pl-10 pr-20 py-4 rounded-xl bg-slate-800 border-2 border-slate-700 focus:border-rose-500 text-white text-lg font-semibold focus:outline-none transition-all" }), _jsx("span", { className: "absolute right-4 top-1/2 -translate-y-1/2 text-slate-400 font-medium", children: "USDT" })] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("div", { className: "flex flex-wrap gap-2", children: [10, 50, 100].map((amount) => (_jsxs("button", { onClick: () => setWithdrawAmount(amount.toString()), className: "px-4 py-2 rounded-lg bg-slate-700 hover:bg-slate-600 text-white text-sm font-medium transition-all", children: ["$", amount] }, amount))) }), _jsx("button", { onClick: () => setWithdrawAmount(mainUsdt.toFixed(2)), className: "px-4 py-2 rounded-lg bg-rose-500/20 hover:bg-rose-500/30 text-rose-400 text-sm font-medium transition-all", children: "MAX" })] })] }), _jsx("button", { onClick: () => setWithdrawStep(2), disabled: !withdrawAmount || parseFloat(withdrawAmount) <= 0 || parseFloat(withdrawAmount) > mainUsdt, className: "w-full py-4 rounded-xl bg-gradient-to-r from-rose-500 to-pink-500 text-white font-bold text-lg shadow-lg hover:shadow-rose-500/50 transition-all disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:shadow-none", children: "Continue" })] })), withdrawStep === 2 && (_jsxs("div", { className: "space-y-6 animate-fadeIn", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-xl font-semibold text-white mb-2", children: "Select Payment Method" }), _jsx("p", { className: "text-slate-400 text-sm", children: "Choose how you want to receive funds" })] }), _jsxs("div", { className: "grid grid-cols-2 gap-4", children: [_jsxs("button", { onClick: () => {
                                                    setWithdrawMethod('usdt');
                                                    setWithdrawStep(3);
                                                }, className: "group relative overflow-hidden rounded-2xl bg-gradient-to-br from-amber-500/20 to-yellow-500/20 border-2 border-amber-500/30 hover:border-amber-500 p-8 transition-all duration-300 hover:scale-105", children: [_jsx("div", { className: "absolute inset-0 bg-gradient-to-br from-amber-500/0 to-yellow-500/0 group-hover:from-amber-500/10 group-hover:to-yellow-500/10 transition-all duration-300" }), _jsx("div", { className: "text-6xl mb-4", children: "\uD83D\uDCB5" }), _jsx("p", { className: "text-white font-bold text-lg", children: "USDT" }), _jsx("p", { className: "text-slate-400 text-xs mt-1", children: "Cryptocurrency" })] }), _jsxs("button", { onClick: () => {
                                                    setWithdrawMethod('inr');
                                                    setWithdrawStep(3);
                                                }, className: "group relative overflow-hidden rounded-2xl bg-gradient-to-br from-blue-500/20 to-indigo-500/20 border-2 border-blue-500/30 hover:border-blue-500 p-8 transition-all duration-300 hover:scale-105", children: [_jsx("div", { className: "absolute inset-0 bg-gradient-to-br from-blue-500/0 to-indigo-500/0 group-hover:from-blue-500/10 group-hover:to-indigo-500/10 transition-all duration-300" }), _jsx("div", { className: "text-6xl mb-4", children: "\uD83C\uDDEE\uD83C\uDDF3" }), _jsx("p", { className: "text-white font-bold text-lg", children: "INR" }), _jsx("p", { className: "text-slate-400 text-xs mt-1", children: "Indian Rupee" })] })] })] })), withdrawStep === 3 && withdrawMethod === 'usdt' && !blockchain && (_jsxs("div", { className: "space-y-6 animate-fadeIn", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-xl font-semibold text-white mb-2", children: "Select Blockchain Network" }), _jsx("p", { className: "text-slate-400 text-sm", children: "Choose the network for your withdrawal" })] }), _jsxs("div", { className: "space-y-4", children: [_jsxs("button", { onClick: () => setBlockchain('bep20'), className: "group w-full relative overflow-hidden rounded-2xl bg-gradient-to-r from-yellow-500/20 to-amber-500/20 border-2 border-yellow-500/30 hover:border-yellow-500 p-6 transition-all duration-300 hover:scale-102 text-left", children: [_jsx("div", { className: "absolute inset-0 bg-gradient-to-r from-yellow-500/0 to-amber-500/0 group-hover:from-yellow-500/10 group-hover:to-amber-500/10 transition-all duration-300" }), _jsxs("div", { className: "flex items-center gap-4", children: [_jsx("div", { className: "w-12 h-12 rounded-xl bg-gradient-to-br from-yellow-500 to-amber-500 flex items-center justify-center flex-shrink-0", children: _jsx("span", { className: "text-2xl", children: "\uD83D\uDD17" }) }), _jsxs("div", { children: [_jsx("p", { className: "text-white font-bold text-lg", children: "Binance Smart Chain" }), _jsx("p", { className: "text-slate-400 text-sm", children: "BEP20 Network" })] })] })] }), _jsxs("button", { onClick: () => setBlockchain('trc20'), className: "group w-full relative overflow-hidden rounded-2xl bg-gradient-to-r from-red-500/20 to-rose-500/20 border-2 border-red-500/30 hover:border-red-500 p-6 transition-all duration-300 hover:scale-102 text-left", children: [_jsx("div", { className: "absolute inset-0 bg-gradient-to-r from-red-500/0 to-rose-500/0 group-hover:from-red-500/10 group-hover:to-rose-500/10 transition-all duration-300" }), _jsxs("div", { className: "flex items-center gap-4", children: [_jsx("div", { className: "w-12 h-12 rounded-xl bg-gradient-to-br from-red-500 to-rose-500 flex items-center justify-center flex-shrink-0", children: _jsx("span", { className: "text-2xl", children: "\u26A1" }) }), _jsxs("div", { children: [_jsx("p", { className: "text-white font-bold text-lg", children: "TRON Network" }), _jsx("p", { className: "text-slate-400 text-sm", children: "TRC20 Network" })] })] })] })] })] })), withdrawStep === 3 && withdrawMethod === 'usdt' && blockchain && (_jsxs("div", { className: "space-y-6 animate-fadeIn", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-xl font-semibold text-white mb-2", children: "Enter Wallet Address" }), _jsxs("p", { className: "text-slate-400 text-sm", children: ["Provide your ", blockchain.toUpperCase(), " wallet address"] })] }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "rounded-xl bg-slate-800/50 border border-slate-700 p-4 space-y-2", children: [_jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-slate-400", children: "Network" }), _jsx("span", { className: "text-white font-bold", children: blockchain.toUpperCase() })] }), _jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-slate-400", children: "Amount" }), _jsxs("span", { className: "text-white font-bold", children: [withdrawAmount, " USDT"] })] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-slate-300 mb-2", children: "Wallet Address *" }), _jsx("textarea", { placeholder: `Enter your ${blockchain.toUpperCase()} wallet address`, value: walletAddress, onChange: (e) => setWalletAddress(e.target.value), rows: 3, className: "w-full px-4 py-3 rounded-xl bg-slate-800 border-2 border-slate-700 focus:border-rose-500 text-white text-sm font-mono focus:outline-none transition-all resize-none" })] }), _jsx("div", { className: "bg-amber-500/10 border border-amber-500/30 rounded-xl p-4", children: _jsxs("div", { className: "flex gap-3", children: [_jsx("svg", { className: "w-6 h-6 text-amber-400 flex-shrink-0", fill: "currentColor", viewBox: "0 0 20 20", children: _jsx("path", { fillRule: "evenodd", d: "M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z", clipRule: "evenodd" }) }), _jsxs("div", { className: "text-sm text-amber-200", children: [_jsx("p", { className: "font-semibold mb-1", children: "Important" }), _jsxs("ul", { className: "space-y-1 text-xs", children: [_jsx("li", { children: "\u2022 Double-check your wallet address" }), _jsxs("li", { children: ["\u2022 Ensure it matches ", blockchain.toUpperCase(), " network"] }), _jsx("li", { children: "\u2022 Wrong address = permanent loss of funds" })] })] })] }) })] }), _jsx("button", { onClick: () => setWithdrawStep(4), disabled: !walletAddress, className: "w-full py-4 rounded-xl bg-gradient-to-r from-rose-500 to-pink-500 text-white font-bold text-lg shadow-lg hover:shadow-rose-500/50 transition-all disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:shadow-none", children: "Continue" })] })), withdrawStep === 3 && withdrawMethod === 'inr' && (_jsxs("div", { className: "space-y-6 animate-fadeIn", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-xl font-semibold text-white mb-2", children: "Enter UPI Details" }), _jsx("p", { className: "text-slate-400 text-sm", children: "Provide your UPI ID for withdrawal" })] }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "rounded-xl bg-slate-800/50 border border-slate-700 p-4", children: [_jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-slate-400", children: "Withdrawal Amount" }), _jsxs("span", { className: "text-white font-bold", children: ["\u20B9", (parseFloat(withdrawAmount) * 80).toFixed(2)] })] }), _jsx("p", { className: "text-xs text-slate-400 mt-1", children: "Approx. conversion rate: 1 USDT \u2248 \u20B980" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-slate-300 mb-2", children: "UPI ID *" }), _jsx("input", { type: "text", placeholder: "yourname@upi", value: upi, onChange: (e) => setUpi(e.target.value), className: "w-full px-4 py-3 rounded-xl bg-slate-800 border-2 border-slate-700 focus:border-rose-500 text-white focus:outline-none transition-all" }), _jsx("p", { className: "text-xs text-slate-400 mt-1", children: "Enter your UPI ID to receive payment" })] }), _jsx("div", { className: "bg-blue-500/10 border border-blue-500/30 rounded-xl p-4", children: _jsxs("div", { className: "flex gap-3", children: [_jsx("svg", { className: "w-6 h-6 text-blue-400 flex-shrink-0", fill: "currentColor", viewBox: "0 0 20 20", children: _jsx("path", { fillRule: "evenodd", d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z", clipRule: "evenodd" }) }), _jsxs("div", { className: "text-sm text-blue-200", children: [_jsx("p", { className: "font-semibold mb-1", children: "Verification Process" }), _jsx("p", { className: "text-xs", children: "Your withdrawal will be verified by our admin team within 24-48 hours. Funds will be sent to your UPI ID once approved." })] })] }) })] }), _jsx("button", { onClick: handleWithdraw, disabled: isProcessing || !upi, className: "w-full py-4 rounded-xl bg-gradient-to-r from-rose-500 to-pink-500 text-white font-bold text-lg shadow-lg hover:shadow-rose-500/50 transition-all disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:shadow-none flex items-center justify-center gap-2", children: isProcessing ? (_jsxs(_Fragment, { children: [_jsxs("svg", { className: "animate-spin h-5 w-5", viewBox: "0 0 24 24", children: [_jsx("circle", { className: "opacity-25", cx: "12", cy: "12", r: "10", stroke: "currentColor", strokeWidth: "4", fill: "none" }), _jsx("path", { className: "opacity-75", fill: "currentColor", d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z" })] }), "Processing..."] })) : ('Submit Withdrawal Request') })] })), withdrawStep === 4 && withdrawMethod === 'usdt' && (_jsxs("div", { className: "space-y-6 animate-fadeIn", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-xl font-semibold text-white mb-2", children: "Confirm Withdrawal" }), _jsx("p", { className: "text-slate-400 text-sm", children: "Review your withdrawal details" })] }), _jsxs("div", { className: "rounded-2xl bg-gradient-to-br from-rose-500/10 to-pink-500/10 border border-rose-500/30 p-6 space-y-4", children: [_jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center justify-between pb-3 border-b border-slate-700", children: [_jsx("span", { className: "text-slate-400", children: "Network" }), _jsx("span", { className: "text-white font-bold", children: blockchain?.toUpperCase() })] }), _jsxs("div", { className: "flex items-center justify-between pb-3 border-b border-slate-700", children: [_jsx("span", { className: "text-slate-400", children: "Amount" }), _jsxs("span", { className: "text-white font-bold text-xl", children: [withdrawAmount, " USDT"] })] }), _jsxs("div", { className: "pb-3 border-b border-slate-700", children: [_jsx("span", { className: "text-slate-400 text-sm block mb-2", children: "Wallet Address" }), _jsx("span", { className: "text-white text-xs font-mono break-all", children: walletAddress })] })] }), _jsx("div", { className: "bg-amber-500/10 border border-amber-500/30 rounded-xl p-4", children: _jsxs("div", { className: "flex gap-3", children: [_jsx("svg", { className: "w-6 h-6 text-amber-400 flex-shrink-0", fill: "currentColor", viewBox: "0 0 20 20", children: _jsx("path", { fillRule: "evenodd", d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z", clipRule: "evenodd" }) }), _jsxs("div", { className: "text-sm text-amber-200", children: [_jsx("p", { className: "font-semibold mb-1", children: "Verification Process" }), _jsx("p", { className: "text-xs", children: "Your withdrawal will be processed within 24-48 hours after admin verification. Please ensure all details are correct." })] })] }) })] }), _jsx("button", { onClick: handleWithdraw, disabled: isProcessing, className: "w-full py-4 rounded-xl bg-gradient-to-r from-rose-500 to-pink-500 text-white font-bold text-lg shadow-lg hover:shadow-rose-500/50 transition-all disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:shadow-none flex items-center justify-center gap-2", children: isProcessing ? (_jsxs(_Fragment, { children: [_jsxs("svg", { className: "animate-spin h-5 w-5", viewBox: "0 0 24 24", children: [_jsx("circle", { className: "opacity-25", cx: "12", cy: "12", r: "10", stroke: "currentColor", strokeWidth: "4", fill: "none" }), _jsx("path", { className: "opacity-75", fill: "currentColor", d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z" })] }), "Submitting..."] })) : ('Submit Withdrawal Request') })] }))] })] }) }));
    };
    const renderSwapFlow = () => (_jsx("div", { className: `min-h-screen bg-gradient-to-br from-slate-950 via-slate-900 to-slate-950 text-white transition-opacity duration-500 ${isTransitioning ? 'opacity-0' : 'opacity-100'}`, children: _jsxs("div", { className: "container mx-auto px-4 py-8 max-w-lg min-h-screen flex flex-col", children: [_jsxs("div", { className: "mb-6", children: [_jsxs("button", { onClick: () => swapStep === 1 ? handleFlowChange(null) : setSwapStep(swapStep - 1), className: "flex items-center gap-2 text-slate-400 hover:text-white transition-colors mb-4", children: [_jsx("svg", { className: "w-5 h-5", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M15 19l-7-7 7-7" }) }), _jsx("span", { children: "Back" })] }), _jsx("h2", { className: "text-3xl font-bold bg-gradient-to-r from-violet-400 to-fuchsia-400 bg-clip-text text-transparent", children: "DLX to USDT Swap" })] }), _jsx(ProgressBar, { currentStep: swapStep, totalSteps: 3 }), _jsxs("div", { className: "flex-1 flex flex-col", children: [swapStep === 1 && (_jsxs("div", { className: "space-y-6 animate-fadeIn", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-xl font-semibold text-white mb-2", children: "Enter Swap Amount" }), _jsx("p", { className: "text-slate-400 text-sm", children: "Convert your DLX tokens to USDT" })] }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "rounded-xl bg-slate-800/50 border border-slate-700 p-4 space-y-2", children: [_jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-slate-400", children: "Available DLX" }), _jsxs("span", { className: "text-white font-bold", children: [wallet.dlx.toFixed(2), " DLX"] })] }), _jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-slate-400", children: "USD Value" }), _jsxs("span", { className: "text-white font-bold", children: ["$", dlxUsdValue.toFixed(2)] })] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-slate-300 mb-2", children: "DLX Amount (Minimum 50 DLX)" }), _jsxs("div", { className: "relative", children: [_jsx("input", { type: "number", placeholder: "50.00", value: swapAmount, onChange: (e) => setSwapAmount(e.target.value), className: "w-full px-4 pr-16 py-4 rounded-xl bg-slate-800 border-2 border-slate-700 focus:border-violet-500 text-white text-lg font-semibold focus:outline-none transition-all" }), _jsx("span", { className: "absolute right-4 top-1/2 -translate-y-1/2 text-slate-400 font-medium", children: "DLX" })] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("div", { className: "flex flex-wrap gap-2", children: [50, 100, 500].map((amount) => (_jsxs("button", { onClick: () => setSwapAmount(amount.toString()), disabled: amount > wallet.dlx, className: "px-4 py-2 rounded-lg bg-slate-700 hover:bg-slate-600 text-white text-sm font-medium transition-all disabled:opacity-50 disabled:cursor-not-allowed", children: [amount, " DLX"] }, amount))) }), _jsx("button", { onClick: () => setSwapAmount(wallet.dlx.toFixed(2)), className: "px-4 py-2 rounded-lg bg-violet-500/20 hover:bg-violet-500/30 text-violet-400 text-sm font-medium transition-all", children: "MAX" })] }), swapAmount && parseFloat(swapAmount) >= 50 && (_jsxs("div", { className: "rounded-xl bg-gradient-to-r from-violet-500/10 to-fuchsia-500/10 border border-violet-500/30 p-4", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-slate-300", children: "You will receive" }), _jsxs("span", { className: "text-white font-bold text-xl", children: [swapUsdtValue.toFixed(2), " USDT"] })] }), _jsx("p", { className: "text-xs text-slate-400 mt-2", children: "Exchange Rate: 1 DLX = 0.1 USDT" })] }))] }), _jsx("button", { onClick: () => setSwapStep(2), disabled: !swapAmount || parseFloat(swapAmount) < 50 || parseFloat(swapAmount) > wallet.dlx, className: "w-full py-4 rounded-xl bg-gradient-to-r from-violet-500 to-fuchsia-500 text-white font-bold text-lg shadow-lg hover:shadow-violet-500/50 transition-all disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:shadow-none", children: "Continue" })] })), swapStep === 2 && (_jsxs("div", { className: "space-y-6 animate-fadeIn", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-xl font-semibold text-white mb-2", children: "Review Swap Details" }), _jsx("p", { className: "text-slate-400 text-sm", children: "Confirm the exchange details" })] }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { className: "rounded-2xl bg-gradient-to-br from-violet-500/10 to-fuchsia-500/10 border border-violet-500/30 p-6", children: [_jsxs("div", { className: "flex items-center justify-between mb-6", children: [_jsxs("div", { className: "flex-1", children: [_jsx("p", { className: "text-slate-400 text-sm mb-1", children: "From" }), _jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "w-10 h-10 rounded-full bg-gradient-to-br from-cyan-500 to-blue-500 flex items-center justify-center", children: _jsx("span", { className: "text-white font-bold text-sm", children: "DLX" }) }), _jsxs("div", { children: [_jsx("p", { className: "text-white font-bold text-xl", children: swapAmount }), _jsx("p", { className: "text-slate-400 text-xs", children: "DLX Tokens" })] })] })] }), _jsx("svg", { className: "w-8 h-8 text-violet-400 flex-shrink-0", fill: "none", stroke: "currentColor", viewBox: "0 0 24 24", children: _jsx("path", { strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, d: "M13 7l5 5m0 0l-5 5m5-5H6" }) }), _jsxs("div", { className: "flex-1 text-right", children: [_jsx("p", { className: "text-slate-400 text-sm mb-1", children: "To" }), _jsxs("div", { className: "flex items-center gap-3 justify-end", children: [_jsxs("div", { children: [_jsx("p", { className: "text-white font-bold text-xl", children: swapUsdtValue.toFixed(2) }), _jsx("p", { className: "text-slate-400 text-xs", children: "USDT" })] }), _jsx("div", { className: "w-10 h-10 rounded-full bg-gradient-to-br from-emerald-500 to-teal-500 flex items-center justify-center", children: _jsx("span", { className: "text-white font-bold text-sm", children: "$" }) })] })] })] }), _jsxs("div", { className: "pt-4 border-t border-slate-700/50 space-y-2", children: [_jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-slate-400", children: "Exchange Rate" }), _jsx("span", { className: "text-white", children: "1 DLX = 0.1 USDT" })] }), _jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsx("span", { className: "text-slate-400", children: "Network Fee" }), _jsx("span", { className: "text-emerald-400 font-medium", children: "FREE" })] })] })] }), _jsx("div", { className: "bg-blue-500/10 border border-blue-500/30 rounded-xl p-4", children: _jsxs("div", { className: "flex gap-3", children: [_jsx("svg", { className: "w-6 h-6 text-blue-400 flex-shrink-0", fill: "currentColor", viewBox: "0 0 20 20", children: _jsx("path", { fillRule: "evenodd", d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z", clipRule: "evenodd" }) }), _jsxs("div", { className: "text-sm text-blue-200", children: [_jsx("p", { className: "font-semibold mb-1", children: "About DLX Swap" }), _jsx("p", { className: "text-xs", children: "DLX tokens will be converted to USDT and credited to your Purchase Wallet. Admin verification required (24-48 hours)." })] })] }) })] }), _jsx("button", { onClick: () => setSwapStep(3), className: "w-full py-4 rounded-xl bg-gradient-to-r from-violet-500 to-fuchsia-500 text-white font-bold text-lg shadow-lg hover:shadow-violet-500/50 transition-all", children: "Continue to Confirm" })] })), swapStep === 3 && (_jsxs("div", { className: "space-y-6 animate-fadeIn", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-xl font-semibold text-white mb-2", children: "Confirm Swap Transaction" }), _jsx("p", { className: "text-slate-400 text-sm", children: "Final confirmation before processing" })] }), _jsxs("div", { className: "rounded-2xl bg-gradient-to-br from-violet-500/10 to-fuchsia-500/10 border border-violet-500/30 p-6 space-y-4", children: [_jsxs("div", { className: "text-center pb-4 border-b border-slate-700", children: [_jsx("p", { className: "text-slate-400 text-sm mb-2", children: "You're swapping" }), _jsxs("p", { className: "text-white font-bold text-3xl mb-1", children: [swapAmount, " DLX"] }), _jsx("p", { className: "text-slate-400 text-sm", children: "for" }), _jsxs("p", { className: "text-emerald-400 font-bold text-3xl mt-1", children: [swapUsdtValue.toFixed(2), " USDT"] })] }), _jsxs("div", { className: "space-y-2 text-sm", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-slate-400", children: "Current Balance" }), _jsxs("span", { className: "text-white", children: [wallet.dlx.toFixed(2), " DLX"] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-slate-400", children: "After Swap" }), _jsxs("span", { className: "text-white", children: [(wallet.dlx - parseFloat(swapAmount)).toFixed(2), " DLX"] })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-slate-400", children: "USDT Credit" }), _jsxs("span", { className: "text-emerald-400 font-bold", children: ["+", swapUsdtValue.toFixed(2), " USDT"] })] })] }), _jsx("div", { className: "bg-amber-500/10 border border-amber-500/30 rounded-xl p-4", children: _jsxs("div", { className: "flex gap-3", children: [_jsx("svg", { className: "w-6 h-6 text-amber-400 flex-shrink-0", fill: "currentColor", viewBox: "0 0 20 20", children: _jsx("path", { fillRule: "evenodd", d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z", clipRule: "evenodd" }) }), _jsxs("div", { className: "text-sm text-amber-200", children: [_jsx("p", { className: "font-semibold mb-1", children: "Important Notice" }), _jsx("p", { className: "text-xs", children: "This transaction requires admin verification and will be processed within 24-48 hours. Once confirmed, this action cannot be reversed." })] })] }) })] }), _jsx("button", { onClick: handleSwap, disabled: isProcessing, className: "w-full py-4 rounded-xl bg-gradient-to-r from-violet-500 to-fuchsia-500 text-white font-bold text-lg shadow-lg hover:shadow-violet-500/50 transition-all disabled:opacity-50 disabled:cursor-not-allowed disabled:hover:shadow-none flex items-center justify-center gap-2", children: isProcessing ? (_jsxs(_Fragment, { children: [_jsxs("svg", { className: "animate-spin h-5 w-5", viewBox: "0 0 24 24", children: [_jsx("circle", { className: "opacity-25", cx: "12", cy: "12", r: "10", stroke: "currentColor", strokeWidth: "4", fill: "none" }), _jsx("path", { className: "opacity-75", fill: "currentColor", d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z" })] }), "Processing Swap..."] })) : ('Confirm & Submit Swap') })] }))] })] }) }));
    return (_jsxs(_Fragment, { children: [activeFlow === null && renderMainPage(), activeFlow === 'deposit' && renderDepositFlow(), activeFlow === 'withdraw' && renderWithdrawFlow(), activeFlow === 'swap' && renderSwapFlow()] }));
}
